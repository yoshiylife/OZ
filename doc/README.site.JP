/*
 * Copyright(c) 1994-1997 情報処理振興事業協会（ＩＰＡ）
 *
 * ＩＰＡは全ての権利を保留します。
 * 本ソフトウェア及びその関連ドキュメンテーションは情報処理振興事業協会（Ｉ
 * ＰＡ）が実施した「開放型基盤ソフトウェア研究開発評価事業」の成果です。
 *
 * 本ソフトウェア及びその関連ドキュメンテーションを利用、複製、変更、配布す
 * る場合は、配布パッケージのファイル「COPYRIGHT.JIS」に記載される使用条件
 * に従って下さい。
 */

システム導入/運用の手引き

1. はじめに

　本文書では、 OZ++ を実際に利用するにあたって、サイトのどのマシンにどんな
役割を割り当て、どのように設定すればよいかのガイドラインを示します。

　OZ++ システムは、エグゼキュータと呼ばれる実行系の上でオブジェクトを動作さ
せることによって計算が進みます。エグゼキュータは単体では動作できず、各マシ
ン上に存在するエグゼキュータを管理し、互いに通信できるための基本機能を提供
しているニュクリアスを必要とします。ニュクリアスには、サイトの中で果たす役
割に応じていくつかの種類があり、適切な種類のニュクリアスを適切に配置する必
要があります。またサイト間の通信を可能にするためにはニュクリアスの通信を中
継するアプリケーションゲートウェイを配置する必要もあります。一方オブジェク
トにも、ユーザオブジェクトの他に、ユーザオブジェクトの支援を行う管理オブジ
ェクトを、サイトの中の適切な位置に配置する必要があります。
　以降の文書では、システムの構成を示し、システムにおいて、アプリケーション
ゲートウェイ、ニュクリアスや管理オブジェクトをどのように配置したらよいかを
示します。

2. OZ++ システムの構成

　OZ++ システムの構成は次のようになっています。

・OZ++ ワールド
　OZ++ ワールドは OZ++ システムでアクセス可能な範囲です。
　OZ++ ワールドは複数のサイトから成ります。ファイアウォールを介して、サイト
　間のアクセス(インターネットとの接続)をする場合、ネットワークはゲイトウェ
　イの存在する非武装地帯と保護されるべき内部ネットワークとに区別されます。
　この時、非武装地帯には OZ アプリケーションゲートウェイ、内部ネットワーク
　にはリレーニュクリアスを起動する必要があります。
　ファイアウォールのない環境ではネットワーク全体が非武装地帯です。

・サイト
　論理的にブロードキャスト可能な範囲をサイトと呼びます。ドメインが論理的な管
　理単位を表しているのに対して、サイトはネットワークの物理的な構成に依存した
　管理単位です。サイトは一つ以上のセグメントから構成されます。

・セグメント
　物理的にブロードキャスト可能な範囲をセグメントと呼びます。セグメントは同一
　の物理的なセグメントに属している一つ以上のステーションから成ります。
　同じサイトに属すセグメント間でブロードキャストが届くように、各セグメントに
　ハーフルータ・ニュクリアス(後述)を設けます。
　論理的なブロードキャストとは、図1 で示すようにブロードキャストをハーフルー
　タ・ニュクリアスが中継することにより、セグメントを越えて届くことを言います。

・ステーション
　一つの計算機です。各ステーション上には、必ず一つのニュクリアスと 0 個以上
　のエグゼキュータが存在します。


          [Segment-A]                              [Segment-B]

      +---+  +---+  +---+                      +---+  +---+  +---+        
      | N |  | N |  | H |<-------------------->| H |  | E |  | N |       
      +-+-+  +-+-+  +-+-+  Relay of broadcast  +-+-+  +-+-+  +-+-+        
        |      |      |                          |      |      |
    =---+------+------+--------=        =--------+------+------+---=
     <-------------------->  :            :  <-------------------->
       physical broadcast    :............:    physical broadcast
           on segment-A                            on segment-B

     <------------------------------------------------------------>
                       logical broadcast in Site

              N: Nucleus
              H: HalfRouter Nucleus
              E: ExecutorID Management Nucleus

                 図1: 論理的ブロードキャスト伝搬イメージ

3. システムのセットアップ

　ファイアウォールを介して、サイト間のアクセス(インターネットとの接続)をす
る場合、ファイアウォールの外にはアプリケーションゲートウェイ、内にはリレー
ニュクリアスが起動している OZ++ システムをインストールして運用するには次の
ことを行う必要があります。

 3.1 サイト ID の取得
　サイト間の通信を行うにはまず、サイト ID を取得する必要があります。

　サイト ID はワールドワイドでユニークな ID を特定の組織が一括して管理し、
申請によって必要なサイト ID を取得する方法が考えられます。申請されたサイト
ID はサイトデータベースに登録され、要求に応じてデータの取得が可能にしておく
必要があります。
　現在具体的な方法は未定です。

 3.2 アプリケーションゲートウェイの配置

　アプリケーションゲートウェイはネットワークの非武装地帯のマシンで動作し、
内部ネットワークと他のサイトとの通信の中継を行います。アプリケーションゲー
トウェイは複数の内部ネットワークの中継を行うこともできます。ここでは中継可
能な内部ネットワークのサイトを局所サイトと呼びます。
　アプリケーションゲートウェイの説明は README.ozag.JP を御覧下さい。

　アプリケーションゲートウェイによるサイト間の中継の経路には次の二つが考え
られます(図はアドレス解決の中継手順を示しています)。

　・局所サイトとそれ以外のサイトとの中継(図 2)
　　アプリケーションゲートウェイが管理しているサイトと他のサイトの中継を行
　　います。
　・局所サイト内の中継(図 3)
　　アプリケーションゲートウェイが複数のサイトを管理していて、管理の範囲内
　　の中継を行います。


                [Site-1]           +--------+           [Site-2]
                                   |        |
   =---+------------+------------+-+-=    =-+-+------------+------------+---=
       |            |            |            |            |            |
   +---+--+(11)+----+---+(10)+---+---+ (9)+---+---+ (8)+---+----+ (7)+--+---+
   |      |<---|        |<---|       |<---|       |<---|        |<---|      |
   | Ncl1 |    | R-Ncl1 |    | APGW1 |    | APGW2 |    | R-Ncl2 |    | Ncl2 |
   |      |===>|        |--->|       |--->|       |--->|        |===>|      |
   +------+(2) +--------+(3) +-------+(4) +-------+(5) +---+----+(6) +--+---+
  (12)| ^                                                               |
      V |(1)                                                            |
    +-----+            ====> Broadcast communication                 +--+--+
    | EX1 |                                                          | EX2 |
    +-----+            ----> Connection communication                +-----+

                   図 2: 局所サイトとその他のサイトの中継


             [Site-2]                               [Site-3]

   =---+--------------+-------------+-------------+--------------+----=
       |              |             |             |              |
   +---+--+  (9) +----+---+ (8) +---+---+ (7) +---+----+  (6) +--+---+
   |      |<-----|        |<----|       |<----|        |<-----|      |
   | Ncl2 |      | R-Ncl2 |     | APGW2 |     | R-Ncl3 |      | Ncl3 |
   |      |=====>|        |---->|       |---->|        |=====>|      |
   +------+ (2)  +--------+ (3) +-------+ (4) +--------+ (5)  +--+---+
  (10)| ^                                                        |
      V |(1)                                                     |
    +-----+            ====> Broadcast communication          +--+--+
    | EX2 |                                                   | EX3 |
    +-----+            ----> Connection communication         +-----+

                   図 3: 局所サイト内の中継

        APGW: アプリケーション・ゲートウェイ
        R-Ncl: リレーニュクリアス
        Ncl: ニュクリアス
        EX: エグゼキュータ


  3.2.1 サイト表の取得

　サイト表($OZROOT/etc/SITE_table)はアプリケーションゲートウェイが起動時
に読み込むテキストファイルで次の項目から構成されます。

    <サイト ID>:<アプリケーションゲートウェイのホスト名、または IP アドレス>:

　　例)
　　　% cat $OZROOT/etc/SITE_table
　　　0004:192.33.202.15:
　　　0005:bunax3:
　　　0006:bun17
　　　0007:192.31.202.11:

　サイト表はサイト ID を管理する組織のデータベースから取得し、定期的に更新
する運用が考えられます。

  3.2.2 局所サイトの設定

　局所サイトの設定は局所サイト情報(¥$OZROOT/etc/apgw¥_LSiteInfo)と呼ばれる
テキストファイルに登録することで行います。
　局所サイト情報として登録するサイト ID はあらかじめサイト表に登録されてい
るサイトでなければなりません。
　局所サイト情報の設定はファイル中の一行に一つのサイトの情報を記述します。
形式は次のように記述する。

    <サイト ID>:<rncl IP-Address>:<rncl ポート>:<サイトタイプ>

サイトタイプはオープンサイトとクローズサイトの二種類があります。

  (1) 図 2 の場合の局所サイト情報の設定
　　この場合局所サイト情報に次のように登録します。

　　　Site-1 側の設定)
　　　　Site-1:<IP-Address of R-Ncl1>:<port of R-Ncl1>:<type of site>
　　　Site-2 側の設定)
　　　　Site-2:<IP-Address of R-Ncl2>:<port of R-Ncl2>:<type of site>

　　例) サイト 1 側の局所サイト情報
　　　% cat $OZROOT/etc/apgw_LSiteInfo
　　　0005:bunax3:3777:CLOSE_SITE

　　例) サイト 2 側の局所サイト情報
　　　% cat $OZROOT/etc/apgw_LSiteInfo
　　　0001:bun13:3777:CLOSE_SITE

　(2) 図 3 の場合の局所サイト情報の設定
　　この場合局所サイト情報に次のように登録します。

　　　　Site-2:<IP-Address of R-Ncl2>:<port of R-Ncl2>:<type of site>
　　　　Site-3:<IP-Address of R-Ncl3>:<port of R-Ncl3>:<type of site>

　　例)
　　　% cat $OZROOT/etc/apgw_LSiteInfo
　　　0005:bunax3:3777:CLOSE_SITE
　　　0002:bun12:3777:OPEN_SITE

 3.3 ニュクリアスの配置

　ニュクリアスにはサイトの中で特別な役割を果たすものがあり、それらを適切に配
置する必要があります。
　特別な役割を果たすニュクリアスの配置の設定はニュクリアス表と呼ばれるテキス
トファイル($OZROOT/etc/ncl-data/NCL_table)に登録することで行います。ニュクリ
アスの説明は README.nucleus.JP を御覧下さい。

  3.3.1 エグゼキュータ ID 管理ニュクリアスの設定

　オブジェクトを搭載し、実行するエグゼキュータはサイト内でユニークな ID によ
って識別されます。この ID をエグゼキュータ ID と呼びます。エグゼキュータ ID 
管理ニュクリアスは、エグゼキュータの生成を集中管理するニュクリアスです。エグ
ゼキュータ ID 管理ニュクリアスから新しいエグゼキュータ ID をえることにより、
サイト内でユニークなエグゼキュータ ID を付与することを保証しています。
　サイトには必ず一つだけエグゼキュータ ID 管理ニュクリアスを置いて下さい。こ
れは常に起動していることが必要なので、なるべく停止しないステーション上に起動
するのがよいでしょう。
　エグゼキュータ ID 管理ニュクリアスの登録はニュクリアス表に次のように登録し
ます。

　　EXID_MANAGE:<ニュクリアスのホスト名、または IP-address>:

  3.3.2 リレーニュクリアスの設定

　リレーニュクリアスはアプリケーションゲートウェイと通信し、他のサイトへの
要求の送信と他のサイトからの要求の受信を中継します。
　リレーニュクリアスの設定はニュクリアス表にリレーニュクリアスと対応するア
プリケーションゲートウェイを記述します。

　　RELAYNCL:<リレーニュクリアスの IP-Address>:<OZAG IP-Address>

　リレーニュクリアスとして登録されているものは、アプリケーションゲートウェ
イの局所サイト情報に登録されているリレーニュクリアスとお互いに整合性が取れ
ている必要があります。

  3.3.3 ハーフルータ・ニュクリアス

　物理的なブロードキャストを中継するニュクリアスをハーフルータ・ニュクリアス
と呼びます(図 1 参照)。
　サイトが複数のセグメントから構成されていた場合、各セグメントに一つずつハー
フルータ・ニュクリアスを置く必要があります。
　ハーフルータニュクリアスの登録はニュクリアス表に次のように登録します。

　　HALFROUTER:<ニュクリアスのホスト名、または IP-address>:

4. 管理オブジェクトの構成

　OZ++ では、ユーザオブジェクトが動作するのに必要な機能を提供する一連の管理
オブジェクトが用意されており、これらを総称して分散オブジェクト管理システムと
呼んでいます。ユーザのオブジェクトが動作するためには、管理オブジェクトが適切
に配置されている必要があります。以下に、各管理オブジェクトの名称と概要を述べ
ます。

・オブジェクトマネージャ
　各エグゼキュータに必ず一つだけ必要です。
　そのエグゼキュータ上のグローバルオブジェクトの状態を管理します。
　グローバルオブジェクトの生成、停止、削除、一時停止などの機能を有します。

・クラスオブジェクト
　おおむね、各ステーションに一つずつ必要です。
　クラス (実行可能コードなど) を管理しています。
　エグゼキュータは、その上で動作しているオブジェクトのクラスを必要とします。
　クラスは、これを提供する役割を担っています。

　クラスが、自身の管理していないクラスを要求されたら、その要求はネットワーク
を通じて委譲され、そのクラスを管理しているクラスオブジェクトからクラスの配送
を受けて、エグゼキュータに供給します。

・ネームディレクトリ
　ドメイン (後述) に必ず一つだけ必要です。
　グローバルオブジェクトに名前を与え、名前で参照する機能を提供します。

・カタログ
　ドメインに必ず一つだけ必要です。
　公開されているアプリケーションやクラスライブラリに名前をつけて保管します。

　管理オブジェクトたちは、それ自身の動作のために他の管理オブジェクトを必要と
しますので、最初は管理オブジェクトを含んだオブジェクトイメージを作成しなくて
はなりません。管理オブジェクトのオブジェクトイメージを作成するツールとして 
newimage が提供されていますので、これを使って作成して下さい。使い方は 
README.newimage.JP に書かれています。

 4.1 ドメイン

　前項で述べた管理オブジェクトは、ネームディレクトリに次の名前で登録されてい
ます。

        クラスオブジェクト        ":classes:xxxxxx"
        ネームディレクトリ        ":name"
        カタログ                  ":catalog"

xxxxxx には、 newimage の際に特に指定されない限り、そのクラスオブジェクトが
いるエグゼキュータの ID の順序番号部分 6 ケタが入ります。エグゼキュータ ID 
が 0001001402000000 だとすれば、 001402 です。
　このように、一つのネームディレクトリが作るオブジェクトの名前空間をドメイン
と呼びます。前項で述べた、ネームディレクトリやカタログがドメインに一つだけ必
要だという意味は、 ":name" や ":catalog" という名前に対応するオブジェクトが
あって、それぞれネームディレクトリとカタログの役割を果たさなければならないと
いう意味です。
　ドメインは各サイトにいくつ作っても構いませんが、ネームディレクトリとカタロ
グは各ドメインにひとつずつ必要です。

 4.2 管理オブジェクトの特徴

　各管理オブジェクトを配置するにあたって、それぞれの特徴を示します。

  4.2.1 オブジェクトマネージャ

　各エグゼキュータに必ず一つだけ作って下さい。

  4.2.2 クラスオブジェクト

　クラスオブジェクトは、自身がいるエグゼキュータにクラスを提供することができ
ますが、同様に、 OZROOT を共有している他のエグゼキュータにも、クラスを提供で
きます。したがって、各 OZROOT ごとに、最低一つのクラスオブジェクトが動作して
いれば、それら全体を動かすことが可能です。通常は OZROOT は各ステーションごと
に作られるでしょうから、クラスオブジェクトも各ステーションごとに一つ必要とい
うことです。 NFS などによって OZROOT を共有している場合は、それらのステーショ
ン群の中に最低一つあればよいです。

　クラスオブジェクトのいない OZROOT は動きませんので、同時に起動されない可能
性のあるエグゼキュータたちは、それぞれ別のクラスオブジェクトを持つ必要があり
ます。あるいは、各 OZROOT に対して、いつも起動しているエグゼキュータを一つ用
意して、そこにクラスオブジェクトを置くのもいいでしょう。

  4.2.2.1 プリロードクラスとブートクラス

　オブジェクトマネージャとクラスオブジェクトは、仮にそのエグゼキュータにクラ
スを供給するクラスオブジェクトがなかったとしても動作できなくてはなりません。
このため、これらを動作させるのに必要なクラスは、特別に“プリロードクラス”と
して指定されており、クラスオブジェクトがなくても適切に供給されるようになって
います。
　しかし、ドメインを動作させるのに必要なネームディレクトリやカタログ、および、
アプリケーションの起動に必要なランチャ (README.launcher.JP を参照して下さい) 
などを動かすためのクラスがなくては、事実上ユーザオブジェクトを動かすことはで
きません。これらの基本的なオブジェクトたちのために必要なクラスは、ブートクラ
スとして提供されています。プリロードクラスは、ブートクラスの一部です。クラス
オブジェクトがブートクラスを管理するかどうかは、 newimage でクラスオブジェク
トを作成する際に指定できます。
　プリロードクラスでないブートクラスは、プリロードクラスとは異なり、クラスオ
ブジェクトによって適切に管理されることによって初めてエグゼキュータへの供給が
可能となります。
　では、ブートクラスを管理しないクラスオブジェクトは存在価値がないのかという
と、そうではありません。クラスオブジェクトは、自身が管理していないクラスにつ
いてはネットワーク上の他のクラスオブジェクトから配送を受けることができますが、
この動作はプリロードクラスだけで実行できます。したがって、ブートクラスを管理
しないクラスオブジェクトを作成して、次々と必要なクラスの配送を受けながらエグ
ゼキュータにクラスを供給することが可能です (もちろんその場合、ネットワーク上
のどこかにはブートクラスを管理するクラスオブジェクトがいなくてはいけません)。

  4.2.3 ネームディレクトリ

　ドメインに必ず一つだけ作って下さい。
　ネームディレクトリのないドメインは動作しませんので、あなたのサイトの中で、
常に稼働しているエグゼキュータ上に作って下さい。

  4.2.4 カタログ

　ドメインに必ず一つだけ作って下さい。
　カタログのいないドメインでは、 OZ++ プログラムを起動することが著しく困難に
なります。カタログは、ネームディレクトリと同じエグゼキュータ上に置いて、常に
動作させておくのがよいでしょう。

 4.3 管理オブジェクトの配置

各管理オブジェクトをどのように配置したらよいか、ガイドラインを示します。

  4.3.1 サイトマスター (*1)

　まず、サイトマスターを作りましょう。なるべく停止しないステーションを一つ選
んで、なるべく停止しないエグゼキュータを作ります。ここには以下のものを置きま
す。

        オブジェクトマネージャ
        クラスオブジェクト (ブートクラスを管理する)
        ネームディレクトリ
        カタログ
        ランチャ

newimage には、サイトマスターを作る簡単な手順が用意されていますので、それを
使えば、サイトマスターに必要なオブジェクトがそろったエグゼキュータを手軽に作
れます (*2)。
　また、このリリースには、配布元で作成したサイトマスターが一つ含まれています。
このサイトマスターの上のクラスオブジェクトやカタログには、ブートクラス以外に
も、 OZ++ のユーザにとって有用な各種のクラスライブラリや、デモのために必要な
クラスが数多く登録されています。最初はこのサイトマスターを使ってみるのもよい
でしょう。

(*1) これは、本来はドメインマスターと呼ばれるべきでしょう。
(*2)一つ注意が必要なのは、この方法で作ったサイトマスター上のクラスオブジェク
    トの名前は、 ":classes:xxxxxx" ではなく、 ":classes:site-master" になる
    という点です。

  4.3.2 ステーションマスター

　一つのドメインに複数のサイトマスターは不要です。では、二台目以降のステーショ
ンには、どのようなエグゼキュータを作ればいいでしょうか? そこには以下のものを
置くようにしましょう。

        オブジェクトマネージャ
        クラスオブジェクト (ブートクラスを管理する)
        ランチャ

こうすれば、ランチャの起動まではそのステーションだけでローカルにできますし、
他に必要なクラスがあれば、よそから配送を受けることもできます。このような構成
のエグゼキュータを、ステーションマスターと呼びます。一つのステーションに複数
のステーションマスターを作るのはかまいません。
　newimage には、ステーションマスターを作る簡単な手順が用意されていますので、
それを使えば、上記のオブジェクトがそろったエグゼキュータを手軽に作れます。

  4.3.3 クラスオブジェクトつきスレーブ

　ステーションマスターの代わりに、ブートクラスを含むすべてのクラスを外部から
配送させるクラスオブジェクトを持ったエグゼキュータを作ることもできます。この
ようなエグゼキュータはクラスオブジェクトつきスレーブと呼ばれ、以下のオブジェ
クトを持っています。

        オブジェクトマネージャ
        クラスオブジェクト (ブートクラスを管理しない)
        ランチャ

　newimage には、クラスオブジェクトつきスレーブを作る簡単な手順が用意されて
いますので、それを使えば、上記のオブジェクトがそろったエグゼキュータを手軽に
作れます。

  4.3.4 クラスオブジェクトなしスレーブ

　既にサイトマスターやステーションマスターを作ったステーション上に、二つ目以
降のエグゼキュータを作る場合は、どのようなオブジェクトを配置したらよいでしょ
うか? そこには以下のものを置くようにしましょう。

        オブジェクトマネージャ
        ランチャ

クラスオブジェクトは、既存のサイトマスターやステーションマスターのものを利用
します。
　newimage には、クラスオブジェクトなしスレーブを作る簡単な手順が用意されて
いますので、それを使えば、上記のオブジェクトがそろったエグゼキュータを手軽に
作れます。

 4.4 管理オブジェクトの作り方

　管理オブジェクトは、 newimage というツールを利用して作成します。このツール
の使い方は、 README.newimage.JP に書かれています。
