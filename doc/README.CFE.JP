/*
 * Copyright(c) 1994-1997 情報処理振興事業協会（ＩＰＡ）
 *
 * ＩＰＡは全ての権利を保留します。
 * 本ソフトウェア及びその関連ドキュメンテーションは情報処理振興事業協会（Ｉ
 * ＰＡ）が実施した「開放型基盤ソフトウェア研究開発評価事業」の成果です。
 *
 * 本ソフトウェア及びその関連ドキュメンテーションを利用、複製、変更、配布す
 * る場合は、配布パッケージのファイル「COPYRIGHT.JIS」に記載される使用条件
 * に従って下さい。
 */


コンパイラフロントエンド (CFE) の機能概要

このドキュメントではワークベンチから起動される (CFE) の機能について述
べる。なお、メニューやボタン等は英語表示のものを使用している。

1. OZ++ におけるプログラミング

ここでは、OZ++ 上でプログラミングを行なう上で必要な概念を説明する。

1.1 クラス

  OZ++では、クラスにシステム全体で一意に識別可能なID(バージョンID)を付
与し、このIDによって各クラスを管理する。また、クラスはバージョンによっ
て管理し、そのバージョンは、クラスの機能を次のように三つに分類すること
によって、三つに分割しそれぞれに異なるバージョンIDを付与している。

1)メッセージパッシングを行うためのインタフェースの部分(パブリックパー
ト)。publicメンバのシグネチャに相当する。publicメンバを利用しているク
ラスに対してこの部分の変更を反映させるためには再コンパイルが必要である。

2) 継承して利用するためのインタフェースの部分(プロテクティッドパート)。
protectedのメソッドのシグネチャおよびインスタンス変数の型に相当する。
このクラスのサブクラスに対してこの部分の変更を反映させるためには再コン
パイルが必要である。

3) 1、2のインタフェースに対する実装部分(実装パート)。インスタンス変数
定義もこれに相当する。この部分の変更は再コンパイルを行うことなく反映さ
せることが可能である(後述)。

 これらの三つのパートの間には、パブリックパート、プロテクティッドパー
ト、実装パートの順で上下関係がある。各パートは一つの上位パートと複数の
下位パートを持つ。下位パートの中のいずれか一つはデフォルトバージョンに
指定することが可能である。デフォルトバージョンは利用者がバージョンを明
示的に指定しない場合に利用される。またパブリックパートの上位パートとし
てルートパートがあり、これはあるクラスのすべてのバージョンを代表するも
のである。

1.2 言語処理系

 OZ++システム全体ではクラスをIDによって識別するが、プログラミング時の
ソースコード中ではクラス名を記述できる仕組みが必要である。したがってコ
ンパイラはクラス名をIDに変換する必要があり、そのための変換テーブルとし
てスクールと呼ぶものを導入している。スクールはクラス名とIDの2項組のリ
ストであり、クラス名に対するプログラミング時の局所的な名称空間を提供す
るものである。
 オブジェクト指向プログラミングでは、クラスが公開しているインタフェー
スだけを利用することによって、クラスの実装には依存しないプログラミング
が可能である。OZ++ではこの特徴とクラスのバージョン管理の仕組みを組み合
わせることによって、プログラム中で使用するクラスの実装パートのバージョ
ンの決定をインスタンス生成時まで遅延させるという柔軟な運用を可能にして
いる。言語処理系は、パブリックまたはプロテクティッドパートのインタフェー
スの情報を利用して、インタフェースの利用に関する検査を行う。この検査に
利用するの情報を得るために、コンパイラは、実行コードを生成するだけでな
く、パブリックおよびプロテクティッドパートのインタフェースに関する情報
の出力も行う。したがってOZ++の一つのクラスのコンパイルはクラスのパブリッ
ク、プロテクティッド、実装の三つのパート毎に処理を行い、各パートの出力
をクラス管理システムに登録する。インタフェースに関する検査はこの情報を
取得することによって行う。
 利用するクラスのバージョンは次のように決定する。

・パブリックパートを利用しているクラスは、パブリックパートのバージョン
までをコンパイル時に決定し、インスタンス生成時に実装パートのバージョン
を決定する。

・継承しているクラスは、プロテクティッドパートのバージョンまでをコンパ
イル時に決定し、インスタンス生成時に実装パートのバージョンを決定する。

 インスタンス生成時に行う実装パートのバージョンを決定する処理を、コン
フィギュアと呼ぶ。このコンフィギュアの結果の情報(コンフィギュレーショ
ン)もクラスの情報の一つとして、クラス管理システムによって管理される。

1.3 コンパイル

 コンパイルは、ワークベンチ上でスクールを指定して、コンパイラフロント
エンドを起動することによって行う。 OZ++のコンパイルは三つのパートに分
けて行うが、その各パート毎に次のような制約がある。

1) 各パートのコンパイル

・上位パートのコンパイルが行われていなければならない。例えば、プロテク
ティッドパートのコンパイルを行うには、パブリックパートのコンパイルが行
われていなければならない。

・コンパイラはスクールによってクラス名をIDに変換するため、利用している
クラスがスクールに含まれていなければならない。

2) パブリックパートのコンパイル

・継承しているクラスのプロテクティッドパートのコンパイルが行われていな
ければならない。

3) 実装パートのコンパイル

・利用しているクラスのパブリックパートのコンパイルが行われていなければ
ならない。

1.4 バージョンの更新

 クラスのバージョンの更新は、各パートのコンパイル時に指定することによっ
て行う。バージョンの更新が指定されると、指定されたパート以下のバージョ
ンの更新をクラス管理システムに要求する。例えば、パブリックパートのコン
パイル時にバージョンの更新を指定すると、クラス管理システムはパブリック
パート以下の三つのパートの新たなバージョンを作成し、それぞれに新たなバー
ジョンIDを付与する。

1.5 ジェネリッククラスに関する用語

・フォーマルジェネリッククラス

ジェネリッククラスで型が未定の型パラメータを含むもの

・リアルジェネリッククラス

フォーマルジェネリッククラスの型パラメータのすべてを特定したもの

2. 機能一覧
                                           
----------------------------------------------------------------------------
メニュー    メニュー項目      機能                    特記事項                
----------------------------------------------------------------------------
CFE         Open...           別のスクールを使う            
            Close             閉じる                  
            Add...            ソースファイルの追加 
            Remove            ソースファイルの削除                            
            Preference...     各種設定                
            Quit              終了                                            
----------------------------------------------------------------------------
Compile     One...            1つのファイルのコンパイル           
            All...            複数のファイルのコンパイル
----------------------------------------------------------------------------
Confgure    One...            1つのファイルのコンフィギュア
            All...            複数のファイルのコンフィギュア
----------------------------------------------------------------------------
Generic     One...            1つのクラス名に対するリアルジェネリックの生成
                              指定したフォーマルジェネリックから生成された
                              リアルジェネリック(スクール中にあるもののみ)を
                              再生成することも可能                           
            All...            Compileの実行中に生成する必要が生じたリアルジ
                              ェネリックの生成

            Detail            生成が必要なリアルジェネリック名を表示

            Discard Classes   生成が必要なリアルジェネリック名を無効にする
            Discard Files     生成が不完全なファイルを消去

----------------------------------------------------------------------------
Window                        ウィンドウの切り替え          
----------------------------------------------------------------------------

2.1 ダイアログの機能一覧

----------------------------------------------------------------------------
メニュー    コマンド          項目、ボタン            機能                    
----------------------------------------------------------------------------
CFE         Preference..      クラスオブジェクト名    再起動後に有効       
                              カレントディレクトリ    最初にファイルセレクタ
                                                      を起動した時の位置の指
                                                      定
                                                      ダブルクリックでファイ
                                                      ルセレクタ起動
                
                              表示言語                英語/日本語             
---------------------------------------------------------------------------
Compile     One...            New(メニューボタン)     新規バージョンの作成
                                                      新たなクラスの場合に
                                                      も有効

                                public                publicの更新(作成)
                                                      新たなクラスの場合は
                                                      これから始める
                                protected             protectedの更新
                                implementation        implementationの更新
  
                              Public                  
                              Protected               record, static class,
                                                      sharedでは使えない
                              Public & Protected            
                              Implementation          record, static class, 
                                                      sharedでは使えない
                              All               
                              Cancel                  キャンセル

            All...            New         
                              Public & Protected            
                              Implementation          
                              Again(UNIX, バージョンなし)         
                              Retry                   ログを初期化して実行
                              Cancel                  キャンセル
----------------------------------------------------------------------------
Configure   One...            Go                      実行
                              Cancel                  キャンセル
                              Other...                他の実装パートを選択
                                                      (README.development.JP
                                                      の SB の機能を参照)

            All...            Retry                   ログを初期化して実行
                              Cancel                  キャンセル
----------------------------------------------------------------------------
Generic     One...            クラス名                生成するリアルジェネ
                                                      リックまたはフォーマル
                                                      ジェネリックのクラス名
                                                      を入力
                              Again(メニューボタン)   リアルジェネリックの
                                                      再生成
                                                      どのパートからかも指定
                                                      する

                                from public           publicパートから再生成
                                from protected        protectedパートから再
                                                      生成
                                only implementation   implementationのみ再生
                                                      成

                              Go                      再生成でない場合の実行
                              Cancel                  キャンセル

            All...            Go                      実行
                              Cancel                  キャンセル
----------------------------------------------------------------------------

2.2 ファイルセレクタの使用法

ディレクトリの側でダブルクリックするとディレクトリの移動
ファイルの側でダブルクリックするとファイルを選択

・ディレクトリを選択するには...
            セレクトしておいてSelectボタンを起動
            Controlを押しながらダブルクリック

2.3 注意事項

CompileおよびConfigureの"One..."はファイルを選択してから起動する。

3. バージョンアップ

すでに生成済みのパートを再コンパイルしようとすると、エラーメッセージが表示さ
れる。このような場合には、そのパートのバージョンアップを以下のように行なう。

1) Newのメニューボタンで生成したいパートを指定する

2) 対象のパートのコンパイルを行なう

新たなクラスのコンパイル時には、Newのpublicを指定する

また、Public, Protectedのバージョンアップを行なうと、コンパイルするパートだ
けでなく、その下位パートにも同時に新しいIDの付与を行なう。例えば、Public パー
トのバージョンアップでは、Public, Protected, Implementation の3つのパートの
新しいIDを付与する。また、新しいIDの付与を行なうと、スクールの内容が書き変わ
る。

4. コンフィギュア

クラスを実装までコンパイルした後、それを利用するには必ずコンフィギュア
を実行する必要がある。

コンフィギュアではそのクラス自身とそのすべての祖先クラスの実装パートと
して、どのバージョンのものを利用するかを指定しなければならないが、特に
指定しない場合には、スクールに含まれている実装パートのものを使用する。

"One..."で実行する場合には、その各クラスの"Other..."ボタンで実装パート
を選択して実行することができる。

5. リアルジェネリックの再生成

GenericのOne...では指定したリアルジェネリックの再生成がAgainにより可能であり、
この場合は新たなバージョンとして生成される。したがって、Againではどのパート
から再生するかを指定する必要がある。

また、再生成するリアルジェネリックの指定には2つの方法がある。

・リアルジェネリッククラス名を指定

指定したそのものを再生成

・リアルジェネリッククラス名の'<'までの文字列を指定

スクール中にある指定した文字列と同じ形式のクラス名を持つ、すべてのリアルジェ
ネリッククラスを再生成する。例えば、Set<String>というリアルジェネリックに対
して、Setという文字列を指定すると、Set<*>から生成されたものでかつスクールに
含まれている他のもの(Set<School>等)が再生成の対象となる。